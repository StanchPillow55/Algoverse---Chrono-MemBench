# Chrono-MemBench Conda Environment Configuration (GPU)
# For Windows 10 + GTX 1070, Linux with CUDA support
#
# Usage:
#   conda env create -f environment-gpu.yml
#
# Or use the bootstrap script:
#   python scripts/bootstrap_env.py

name: chrono_membench_gpu
channels:
  - pytorch
  - nvidia
  - conda-forge
  - defaults

dependencies:
  # Python
  - python=3.12

  # PyTorch with CUDA 12.1 support (2.5.x compatible)
  - pytorch=2.5.*
  - pytorch-cuda=12.1
  - torchvision
  - torchaudio
  - cuda-toolkit=12.8

  # Core ML/AI packages
  - transformers>=4.40.0
  - tokenizers>=0.21.0
  - datasets>=2.15.0
  - accelerate>=0.25.0
  - peft>=0.8.0
  - safetensors>=0.4.3
  - huggingface_hub>=0.34.0

  # Data science stack
  - numpy>=1.24.0
  - pandas>=2.0.0
  - scikit-learn>=1.3.0
  - matplotlib>=3.7.0
  - seaborn>=0.12.0

  # Development tools
  - jupyter
  - notebook
  - jupyterlab
  - ipywidgets

  # Configuration and logging
  - pyyaml>=6.0
  - hydra-core>=1.3.0
  - python-dotenv>=1.0.0
  - rich>=13.0.0
  - typer>=0.9.0

  # Progress and utilities
  - tqdm>=4.65.0
  - psutil

  # Testing and quality
  - pytest>=7.0.0
  - pytest-cov>=4.0.0
  - pre-commit>=3.0.0
  - black>=23.0.0
  - isort>=5.12.0
  - yapf>=0.32.0
  - flake8>=6.0.0
  - mypy>=1.0.0

  # Monitoring
  - tensorboard>=2.15.0
  - wandb>=0.16.0

  # GPU-specific packages (pip installs)
  - pip
  - pip:
    - bitsandbytes>=0.42.0  # GPU quantization
    - flash-attn>=2.0.0     # Flash attention (CUDA only)
    - triton>=2.0.0         # Triton kernels (CUDA only)
